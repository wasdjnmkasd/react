{"version":3,"sources":["../node_modules/wangeditor/release/wangEditor.js"],"names":["module","exports","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","this","nodeType","selectorResult","Array","replace","trim","indexOf","html","div","document","createElement","innerHTML","children","createElemByHTML","result","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","type","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","click","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","pHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","factory"],"mappings":"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","file":"static/js/10.a3b19f04.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.wangEditor = factory();\n})(this, function () {\n  'use strict';\n  /*\n      poly-fill\n  */\n\n  var polyfill = function polyfill() {\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function (target, varArgs) {\n        // .length of function is 2\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n    } // IE 中兼容 Element.prototype.matches\n\n\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i = matches.length;\n\n        while (--i >= 0 && matches.item(i) !== this) {}\n\n        return i > -1;\n      };\n    }\n  };\n  /*\n      DOM 操作 API\n  */\n  // 根据 html 代码片段创建 dom 对象\n\n\n  function createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n  } // 是否是 DOM List\n\n\n  function isDOMList(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n      return true;\n    }\n\n    return false;\n  } // 封装 document.querySelectorAll\n\n\n  function querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n\n    if (isDOMList(result)) {\n      return result;\n    } else {\n      return [result];\n    }\n  } // 记录所有的事件绑定\n\n\n  var eventList = []; // 创建构造函数\n\n  function DomElement(selector) {\n    if (!selector) {\n      return;\n    } // selector 本来就是 DomElement 对象，直接返回\n\n\n    if (selector instanceof DomElement) {\n      return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n    var selectorResult = [];\n\n    if (nodeType === 9) {\n      // document 节点\n      selectorResult = [selector];\n    } else if (nodeType === 1) {\n      // 单个 DOM 节点\n      selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n      // DOM List 或者数组\n      selectorResult = selector;\n    } else if (typeof selector === 'string') {\n      // 字符串\n      selector = selector.replace('/\\n/mg', '').trim();\n\n      if (selector.indexOf('<') === 0) {\n        // 如 <div>\n        selectorResult = createElemByHTML(selector);\n      } else {\n        // 如 #id .class\n        selectorResult = querySelectorAll(selector);\n      }\n    }\n\n    var length = selectorResult.length;\n\n    if (!length) {\n      // 空数组\n      return this;\n    } // 加入 DOM 节点\n\n\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      this[i] = selectorResult[i];\n    }\n\n    this.length = length;\n  } // 修改原型\n\n\n  DomElement.prototype = {\n    constructor: DomElement,\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n      var i = void 0;\n\n      for (i = 0; i < this.length; i++) {\n        var elem = this[i];\n        var result = fn.call(elem, elem, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n\n      return this;\n    },\n    // clone\n    clone: function clone(deep) {\n      var cloneList = [];\n      this.forEach(function (elem) {\n        cloneList.push(elem.cloneNode(!!deep));\n      });\n      return $(cloneList);\n    },\n    // 获取第几个元素\n    get: function get(index) {\n      var length = this.length;\n\n      if (index >= length) {\n        index = index % length;\n      }\n\n      return $(this[index]);\n    },\n    // 第一个\n    first: function first() {\n      return this.get(0);\n    },\n    // 最后一个\n    last: function last() {\n      var length = this.length;\n      return this.get(length - 1);\n    },\n    // 绑定事件\n    on: function on(type, selector, fn) {\n      // selector 不为空，证明绑定事件要加代理\n      if (!fn) {\n        fn = selector;\n        selector = null;\n      } // type 是否有多个\n\n\n      var types = [];\n      types = type.split(/\\s+/);\n      return this.forEach(function (elem) {\n        types.forEach(function (type) {\n          if (!type) {\n            return;\n          } // 记录下，方便后面解绑\n\n\n          eventList.push({\n            elem: elem,\n            type: type,\n            fn: fn\n          });\n\n          if (!selector) {\n            // 无代理\n            elem.addEventListener(type, fn);\n            return;\n          } // 有代理\n\n\n          elem.addEventListener(type, function (e) {\n            var target = e.target;\n\n            if (target.matches(selector)) {\n              fn.call(target, e);\n            }\n          });\n        });\n      });\n    },\n    // 取消事件绑定\n    off: function off(type, fn) {\n      return this.forEach(function (elem) {\n        elem.removeEventListener(type, fn);\n      });\n    },\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n      if (val == null) {\n        // 获取值\n        return this[0].getAttribute(key);\n      } else {\n        // 设置值\n        return this.forEach(function (elem) {\n          elem.setAttribute(key, val);\n        });\n      }\n    },\n    // 添加 class\n    addClass: function addClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            return !!item.trim();\n          }); // 添加 class\n\n          if (arr.indexOf(className) < 0) {\n            arr.push(className);\n          } // 修改 elem.class\n\n\n          elem.className = arr.join(' ');\n        } else {\n          elem.className = className;\n        }\n      });\n    },\n    // 删除 class\n    removeClass: function removeClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            item = item.trim(); // 删除 class\n\n            if (!item || item === className) {\n              return false;\n            }\n\n            return true;\n          }); // 修改 elem.class\n\n          elem.className = arr.join(' ');\n        }\n      });\n    },\n    // 修改 css\n    css: function css(key, val) {\n      var currentStyle = key + ':' + val + ';';\n      return this.forEach(function (elem) {\n        var style = (elem.getAttribute('style') || '').trim();\n        var styleArr = void 0,\n            resultArr = [];\n\n        if (style) {\n          // 将 style 按照 ; 拆分为数组\n          styleArr = style.split(';');\n          styleArr.forEach(function (item) {\n            // 对每项样式，按照 : 拆分为 key 和 value\n            var arr = item.split(':').map(function (i) {\n              return i.trim();\n            });\n\n            if (arr.length === 2) {\n              resultArr.push(arr[0] + ':' + arr[1]);\n            }\n          }); // 替换或者新增\n\n          resultArr = resultArr.map(function (item) {\n            if (item.indexOf(key) === 0) {\n              return currentStyle;\n            } else {\n              return item;\n            }\n          });\n\n          if (resultArr.indexOf(currentStyle) < 0) {\n            resultArr.push(currentStyle);\n          } // 结果\n\n\n          elem.setAttribute('style', resultArr.join('; '));\n        } else {\n          // style 无值\n          elem.setAttribute('style', currentStyle);\n        }\n      });\n    },\n    // 显示\n    show: function show() {\n      return this.css('display', 'block');\n    },\n    // 隐藏\n    hide: function hide() {\n      return this.css('display', 'none');\n    },\n    // 获取子节点\n    children: function children() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.children);\n    },\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.childNodes);\n    },\n    // 增加子节点\n    append: function append($children) {\n      return this.forEach(function (elem) {\n        $children.forEach(function (child) {\n          elem.appendChild(child);\n        });\n      });\n    },\n    // 移除当前节点\n    remove: function remove() {\n      return this.forEach(function (elem) {\n        if (elem.remove) {\n          elem.remove();\n        } else {\n          var parent = elem.parentElement;\n          parent && parent.removeChild(elem);\n        }\n      });\n    },\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n      var elem = this[0];\n      var child = $child[0];\n      return elem.contains(child);\n    },\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n      var elem = this[0];\n      return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n      var elem = this[0];\n      return elem.nodeName;\n    },\n    // 从当前元素查找\n    find: function find(selector) {\n      var elem = this[0];\n      return $(elem.querySelectorAll(selector));\n    },\n    // 获取当前元素的 text\n    text: function text(val) {\n      if (!val) {\n        // 获取 text\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n          return '';\n        });\n      } else {\n        // 设置 text\n        return this.forEach(function (elem) {\n          elem.innerHTML = val;\n        });\n      }\n    },\n    // 获取 html\n    html: function html(value) {\n      var elem = this[0];\n\n      if (value == null) {\n        return elem.innerHTML;\n      } else {\n        elem.innerHTML = value;\n        return this;\n      }\n    },\n    // 获取 value\n    val: function val() {\n      var elem = this[0];\n      return elem.value.trim();\n    },\n    // focus\n    focus: function focus() {\n      return this.forEach(function (elem) {\n        elem.focus();\n      });\n    },\n    // parent\n    parent: function parent() {\n      var elem = this[0];\n      return $(elem.parentElement);\n    },\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n      var results = document.querySelectorAll(selector);\n      var length = results.length;\n\n      if (!length) {\n        // 传入的 selector 无效\n        return null;\n      }\n\n      var elem = _currentElem || this[0];\n\n      if (elem.nodeName === 'BODY') {\n        return null;\n      }\n\n      var parent = elem.parentElement;\n      var i = void 0;\n\n      for (i = 0; i < length; i++) {\n        if (parent === results[i]) {\n          // 找到，并返回\n          return $(parent);\n        }\n      } // 继续查找\n\n\n      return this.parentUntil(selector, parent);\n    },\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n      if ($elem.nodeType === 1) {\n        return this[0] === $elem;\n      } else {\n        return this[0] === $elem[0];\n      }\n    },\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n        parent.insertBefore(elem, referenceNode);\n      });\n    },\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n\n        if (parent.lastChild === referenceNode) {\n          // 最后一个元素\n          parent.appendChild(elem);\n        } else {\n          // 不是最后一个元素\n          parent.insertBefore(elem, referenceNode.nextSibling);\n        }\n      });\n    }\n  }; // new 一个对象\n\n  function $(selector) {\n    return new DomElement(selector);\n  } // 解绑所有事件，用于销毁编辑器\n\n\n  $.offAll = function () {\n    eventList.forEach(function (item) {\n      var elem = item.elem;\n      var type = item.type;\n      var fn = item.fn; // 解绑\n\n      elem.removeEventListener(type, fn);\n    });\n  };\n  /*\n      配置信息\n  */\n\n\n  var config = {\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n    // 表情\n    emotions: [{\n      // tab 的标题\n      title: '默认',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        alt: '[坏笑]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n      }, {\n        alt: '[舔屏]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n      }, {\n        alt: '[污]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n      }]\n    }, {\n      // tab 的标题\n      title: '新浪',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n        alt: '[草泥马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n        alt: '[神马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n        alt: '[浮云]'\n      }]\n    }, {\n      // tab 的标题\n      title: 'emoji',\n      // type -> 'emoji' / 'image'\n      type: 'emoji',\n      // content -> 数组\n      content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n    // 编辑区域的 z-index\n    zIndex: 10000,\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n      // text 是插入的文字\n      // link 是插入的链接\n      return true; // 返回 true 即表示成功\n      // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n      // src 即图片的地址\n      return true; // 返回 true 即表示成功\n      // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n      // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      return content;\n    },\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n    },\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n    // 自定义配置 filename\n    uploadFileName: '',\n    // 上传图片的自定义参数\n    uploadImgParams: {// token: 'abcdef12345'\n    },\n    // 上传图片的自定义header\n    uploadImgHeaders: {// 'Accept': 'text/x-json'\n    },\n    // 配置 XHR withCredentials\n    withCredentials: false,\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n    // 上传图片 hook \n    uploadImgHooks: {\n      // customInsert: function (insertLinkImg, result, editor) {\n      //     console.log('customInsert')\n      //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n      //     const data = result.data1 || []\n      //     data.forEach(link => {\n      //         insertLinkImg(link)\n      //     })\n      // },\n      before: function before(xhr, editor, files) {// 图片上传之前触发\n        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n        // return {\n        //     prevent: true,\n        //     msg: '放弃上传'\n        // }\n      },\n      success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n      },\n      fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n      },\n      error: function error(xhr, editor) {// 图片上传出错时触发\n      },\n      timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n      }\n    },\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n  };\n  /*\n      工具\n  */\n  // 和 UA 相关的属性\n\n  var UA = {\n    _ua: navigator.userAgent,\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n      var reg = /webkit/i;\n      return reg.test(this._ua);\n    },\n    // 是否 IE\n    isIE: function isIE() {\n      return 'ActiveXObject' in window;\n    }\n  }; // 遍历对象\n\n  function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result = fn.call(obj, key, obj[key]);\n\n        if (result === false) {\n          break;\n        }\n      }\n    }\n  } // 遍历类数组\n\n\n  function arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n\n    for (i = 0; i < length; i++) {\n      item = fakeArr[i];\n      result = fn.call(fakeArr, item, i);\n\n      if (result === false) {\n        break;\n      }\n    }\n  } // 获取随机数\n\n\n  function getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n  } // 替换 html 特殊字符\n\n\n  function replaceHtmlSymbol(html) {\n    if (html == null) {\n      return '';\n    }\n\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n  } // 返回百分比的格式\n  // 判断是不是 function\n\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n  /*\n      bold-menu\n  */\n  // 构造函数\n\n\n  function Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Bold.prototype = {\n    constructor: Bold,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 bold 命令\n\n\n      editor.cmd.do('bold');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('bold')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      替换多语言\n   */\n\n  var replaceLang = function replaceLang(editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n    langArgs.forEach(function (item) {\n      var reg = item.reg;\n      var val = item.val;\n\n      if (reg.test(result)) {\n        result = result.replace(reg, function () {\n          return val;\n        });\n      }\n    });\n    return result;\n  };\n  /*\n      droplist\n  */\n\n\n  var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n  function DropList(menu, opt) {\n    var _this = this; // droplist 所依附的菜单\n\n\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt; // 容器\n\n    var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n    var $title = opt.$title;\n    var titleHtml = void 0;\n\n    if ($title) {\n      // 替换多语言\n      titleHtml = $title.html();\n      titleHtml = replaceLang(editor, titleHtml);\n      $title.html(titleHtml);\n      $title.addClass('w-e-dp-title');\n      $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n    var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n      var $elem = item.$elem; // 替换多语言\n\n      var elemHtml = $elem.html();\n      elemHtml = replaceLang(editor, elemHtml);\n      $elem.html(elemHtml);\n      var value = item.value;\n      var $li = $('<li class=\"w-e-item\"></li>');\n\n      if ($elem) {\n        $li.append($elem);\n        $list.append($li);\n        $li.on('click', function (e) {\n          onClick(value); // 隐藏\n\n          _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n          }, 0);\n        });\n      }\n    }); // 绑定隐藏事件\n\n    $container.on('mouseleave', function (e) {\n      _this.hideTimeoutId = setTimeout(function () {\n        _this.hide();\n      }, 0);\n    }); // 记录属性\n\n    this.$container = $container; // 基本属性\n\n    this._rendered = false;\n    this._show = false;\n  } // 原型\n\n\n  DropList.prototype = {\n    constructor: DropList,\n    // 显示（插入DOM）\n    show: function show() {\n      if (this.hideTimeoutId) {\n        // 清除之前的定时隐藏\n        clearTimeout(this.hideTimeoutId);\n      }\n\n      var menu = this.menu;\n      var $menuELem = menu.$elem;\n      var $container = this.$container;\n\n      if (this._show) {\n        return;\n      }\n\n      if (this._rendered) {\n        // 显示\n        $container.show();\n      } else {\n        // 加入 DOM 之前先定位位置\n        var menuHeight = $menuELem.getSizeData().height || 0;\n        var width = this.opt.width || 100; // 默认为 100\n\n        $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n        $menuELem.append($container);\n        this._rendered = true;\n      } // 修改属性\n\n\n      this._show = true;\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      if (this.showTimeoutId) {\n        // 清除之前的定时显示\n        clearTimeout(this.showTimeoutId);\n      }\n\n      var $container = this.$container;\n\n      if (!this._show) {\n        return;\n      } // 隐藏并需改属性\n\n\n      $container.hide();\n      this._show = false;\n    }\n  };\n  /*\n      menu - header\n  */\n  // 构造函数\n\n  function Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>设置标题</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<h1>H1</h1>'),\n        value: '<h1>'\n      }, {\n        $elem: $('<h2>H2</h2>'),\n        value: '<h2>'\n      }, {\n        $elem: $('<h3>H3</h3>'),\n        value: '<h3>'\n      }, {\n        $elem: $('<h4>H4</h4>'),\n        value: '<h4>'\n      }, {\n        $elem: $('<h5>H5</h5>'),\n        value: '<h5>'\n      }, {\n        $elem: $('<p>正文</p>'),\n        value: '<p>'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 Head 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Head.prototype = {\n    constructor: Head,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if (editor.$textElem.equal($selectionElem)) {\n        // 不能选中多行来设置标题，否则会出现问题\n        // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n        return;\n      }\n\n      editor.cmd.do('formatBlock', value);\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^h/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - fontSize\n  */\n  // 构造函数\n\n  function FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 160,\n      $title: $('<p>字号</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n        value: '1'\n      }, {\n        $elem: $('<span style=\"font-size: small;\">small</span>'),\n        value: '2'\n      }, {\n        $elem: $('<span>normal</span>'),\n        value: '3'\n      }, {\n        $elem: $('<span style=\"font-size: large;\">large</span>'),\n        value: '4'\n      }, {\n        $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n        value: '5'\n      }, {\n        $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n        value: '6'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontSize 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontSize.prototype = {\n    constructor: FontSize,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontSize', value);\n    }\n  };\n  /*\n      menu - fontName\n  */\n  // 构造函数\n\n  function FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 获取配置的字体\n\n    var config = editor.config;\n    var fontNames = config.fontNames || []; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>字体</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: fontNames.map(function (fontName) {\n        return {\n          $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n          value: fontName\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontName 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontName.prototype = {\n    constructor: FontName,\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontName', value);\n    }\n  };\n  /*\n      panel\n  */\n\n  var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n  var _isCreatedPanelMenus = []; // 构造函数\n\n  function Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n  } // 原型\n\n\n  Panel.prototype = {\n    constructor: Panel,\n    // 显示（插入DOM）\n    show: function show() {\n      var _this = this;\n\n      var menu = this.menu;\n\n      if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n        // 该菜单已经创建了 panel 不能再创建\n        return;\n      }\n\n      var editor = menu.editor;\n      var $body = $('body');\n      var $textContainerElem = editor.$textContainerElem;\n      var opt = this.opt; // panel 的容器\n\n      var $container = $('<div class=\"w-e-panel-container\"></div>');\n      var width = opt.width || 300; // 默认 300px\n\n      $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n      var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n      $container.append($closeBtn);\n      $closeBtn.on('click', function () {\n        _this.hide();\n      }); // 准备 tabs 容器\n\n      var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n      var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n      $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n      var height = opt.height;\n\n      if (height) {\n        $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n      } // tabs\n\n\n      var tabs = opt.tabs || [];\n      var tabTitleArr = [];\n      var tabContentArr = [];\n      tabs.forEach(function (tab, tabIndex) {\n        if (!tab) {\n          return;\n        }\n\n        var title = tab.title || '';\n        var tpl = tab.tpl || ''; // 替换多语言\n\n        title = replaceLang(editor, title);\n        tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n        var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n        $tabTitleContainer.append($title);\n        var $content = $(tpl);\n        $tabContentContainer.append($content); // 记录到内存\n\n        $title._index = tabIndex;\n        tabTitleArr.push($title);\n        tabContentArr.push($content); // 设置 active 项\n\n        if (tabIndex === 0) {\n          $title._active = true;\n          $title.addClass('w-e-active');\n        } else {\n          $content.hide();\n        } // 绑定 tab 的事件\n\n\n        $title.on('click', function (e) {\n          if ($title._active) {\n            return;\n          } // 隐藏所有的 tab\n\n\n          tabTitleArr.forEach(function ($title) {\n            $title._active = false;\n            $title.removeClass('w-e-active');\n          });\n          tabContentArr.forEach(function ($content) {\n            $content.hide();\n          }); // 显示当前的 tab\n\n          $title._active = true;\n          $title.addClass('w-e-active');\n          $content.show();\n        });\n      }); // 绑定关闭事件\n\n      $container.on('click', function (e) {\n        // 点击时阻止冒泡\n        e.stopPropagation();\n      });\n      $body.on('click', function (e) {\n        _this.hide();\n      }); // 添加到 DOM\n\n      $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n      tabs.forEach(function (tab, index) {\n        if (!tab) {\n          return;\n        }\n\n        var events = tab.events || [];\n        events.forEach(function (event) {\n          var selector = event.selector;\n          var type = event.type;\n          var fn = event.fn || emptyFn;\n          var $content = tabContentArr[index];\n          $content.find(selector).on(type, function (e) {\n            e.stopPropagation();\n            var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n            if (needToHide) {\n              _this.hide();\n            }\n          });\n        });\n      }); // focus 第一个 elem\n\n      var $inputs = $container.find('input[type=text],textarea');\n\n      if ($inputs.length) {\n        $inputs.get(0).focus();\n      } // 添加到属性\n\n\n      this.$container = $container; // 隐藏其他 panel\n\n      this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n      _isCreatedPanelMenus.push(menu);\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      var menu = this.menu;\n      var $container = this.$container;\n\n      if ($container) {\n        $container.remove();\n      } // 将该 menu 记录中移除\n\n\n      _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n        if (item === menu) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    },\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n      if (!_isCreatedPanelMenus.length) {\n        return;\n      }\n\n      _isCreatedPanelMenus.forEach(function (menu) {\n        var panel = menu.panel || {};\n\n        if (panel.hide) {\n          panel.hide();\n        }\n      });\n    }\n  };\n  /*\n      menu - link\n  */\n  // 构造函数\n\n  function Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Link.prototype = {\n    constructor: Link,\n    // 点击事件\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $linkelem = void 0;\n\n      if (this._active) {\n        // 当前选区在链接里面\n        $linkelem = editor.selection.getSelectionContainerElem();\n\n        if (!$linkelem) {\n          return;\n        } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n        editor.selection.createRangeByElem($linkelem);\n        editor.selection.restoreSelection(); // 显示 panel\n\n        this._createPanel($linkelem.text(), $linkelem.attr('href'));\n      } else {\n        // 当前选区不在链接里面\n        if (editor.selection.isSelectionEmpty()) {\n          // 选区是空的，未选中内容\n          this._createPanel('', '');\n        } else {\n          // 选中内容了\n          this._createPanel(editor.selection.getSelectionText(), '');\n        }\n      }\n    },\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n      var _this = this; // panel 中需要用到的id\n\n\n      var inputLinkId = getRandom('input-link');\n      var inputTextId = getRandom('input-text');\n      var btnOkId = getRandom('btn-ok');\n      var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n      var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n      var panel = new Panel(this, {\n        width: 300,\n        // panel 中可包含多个 tab\n        tabs: [{\n          // tab 的标题\n          title: '链接',\n          // 模板\n          tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + \"\\\" placeholder=\\\"\\u94FE\\u63A5\\u6587\\u5B57\\\"/></td>\\n                            <input id=\\\"\" + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                                <button id=\\\"\" + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + \"\\\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>\",\n          // 事件绑定\n          events: [// 插入链接\n          {\n            selector: '#' + btnOkId,\n            type: 'click',\n            fn: function fn() {\n              // 执行插入链接\n              var $link = $('#' + inputLinkId);\n              var $text = $('#' + inputTextId);\n              var link = $link.val();\n              var text = $text.val();\n\n              _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, // 删除链接\n          {\n            selector: '#' + btnDelId,\n            type: 'click',\n            fn: function fn() {\n              // 执行删除链接\n              _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // tab end\n\n        }] // tabs end\n\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 删除当前链接\n    _delLink: function _delLink() {\n      if (!this._active) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var selectionText = editor.selection.getSelectionText();\n      editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n      var editor = this.editor;\n      var config = editor.config;\n      var linkCheck = config.linkCheck;\n      var checkResult = true; // 默认为 true\n\n      if (linkCheck && typeof linkCheck === 'function') {\n        checkResult = linkCheck(text, link);\n      }\n\n      if (checkResult === true) {\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n      } else {\n        alert(checkResult);\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      if ($selectionELem.getNodeName() === 'A') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      italic-menu\n  */\n  // 构造函数\n\n  function Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Italic.prototype = {\n    constructor: Italic,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 italic 命令\n\n\n      editor.cmd.do('italic');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('italic')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      redo-menu\n  */\n  // 构造函数\n\n  function Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Redo.prototype = {\n    constructor: Redo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 redo 命令\n\n      editor.cmd.do('redo');\n    }\n  };\n  /*\n      strikeThrough-menu\n  */\n  // 构造函数\n\n  function StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  StrikeThrough.prototype = {\n    constructor: StrikeThrough,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 strikeThrough 命令\n\n\n      editor.cmd.do('strikeThrough');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('strikeThrough')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      underline-menu\n  */\n  // 构造函数\n\n  function Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Underline.prototype = {\n    constructor: Underline,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 underline 命令\n\n\n      editor.cmd.do('underline');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('underline')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      undo-menu\n  */\n  // 构造函数\n\n  function Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Undo.prototype = {\n    constructor: Undo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 undo 命令\n\n      editor.cmd.do('undo');\n    }\n  };\n  /*\n      menu - list\n  */\n  // 构造函数\n\n  function List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>设置列表</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n        value: 'insertOrderedList'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n        value: 'insertUnorderedList'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  List.prototype = {\n    constructor: List,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      editor.selection.restoreSelection();\n\n      if (editor.cmd.queryCommandState(value)) {\n        return;\n      }\n\n      editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if ($selectionElem.getNodeName() === 'LI') {\n        $selectionElem = $selectionElem.parent();\n      }\n\n      if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n        return;\n      }\n\n      if ($selectionElem.equal($textElem)) {\n        // 证明是顶级标签，没有被 <p> 包裹\n        return;\n      }\n\n      var $parent = $selectionElem.parent();\n\n      if ($parent.equal($textElem)) {\n        // $parent 是顶级标签，不能删除\n        return;\n      }\n\n      $selectionElem.insertAfter($parent);\n      $parent.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - justify\n  */\n  // 构造函数\n\n  function Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>对齐方式</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n        value: 'justifyLeft'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n        value: 'justifyCenter'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n        value: 'justifyRight'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Justify.prototype = {\n    constructor: Justify,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do(value);\n    }\n  };\n  /*\n      menu - Forecolor\n  */\n  // 构造函数\n\n  function ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>文字颜色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 ForeColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  ForeColor.prototype = {\n    constructor: ForeColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('foreColor', value);\n    }\n  };\n  /*\n      menu - BackColor\n  */\n  // 构造函数\n\n  function BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>背景色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 BackColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  BackColor.prototype = {\n    constructor: BackColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('backColor', value);\n    }\n  };\n  /*\n      menu - quote\n  */\n  // 构造函数\n\n  function Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Quote.prototype = {\n    constructor: Quote,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n      var nodeName = $selectionElem.getNodeName();\n\n      if (!UA.isIE()) {\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          editor.cmd.do('formatBlock', '<P>');\n        } else {\n          // 转换为 quote\n          editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n\n        return;\n      } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n      var content = void 0,\n          $targetELem = void 0;\n\n      if (nodeName === 'P') {\n        // 将 P 转换为 quote\n        content = $selectionElem.text();\n        $targetELem = $('<blockquote>' + content + '</blockquote>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n        return;\n      }\n\n      if (nodeName === 'BLOCKQUOTE') {\n        // 撤销 quote\n        content = $selectionElem.text();\n        $targetELem = $('<p>' + content + '</p>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n      }\n    },\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^BLOCKQUOTE$/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - code\n  */\n  // 构造函数\n\n  function Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Code.prototype = {\n    constructor: Code,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $startElem = editor.selection.getSelectionStartElem();\n      var $endElem = editor.selection.getSelectionEndElem();\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n      var selectionText = editor.selection.getSelectionText();\n      var $code = void 0;\n\n      if (!$startElem.equal($endElem)) {\n        // 跨元素选择，不做处理\n        editor.selection.restoreSelection();\n        return;\n      }\n\n      if (!isSeleEmpty) {\n        // 选取不是空，用 <code> 包裹即可\n        $code = $('<code>' + selectionText + '</code>');\n        editor.cmd.do('insertElem', $code);\n        editor.selection.createRangeByElem($code, false);\n        editor.selection.restoreSelection();\n        return;\n      } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n      if (this._active) {\n        // 选中状态，将编辑内容\n        this._createPanel($startElem.html());\n      } else {\n        // 未选中状态，将创建内容\n        this._createPanel();\n      }\n    },\n    _createPanel: function _createPanel(value) {\n      var _this = this; // value - 要编辑的内容\n\n\n      value = value || '';\n      var type = !value ? 'new' : 'edit';\n      var textId = getRandom('texxt');\n      var btnId = getRandom('btn');\n      var panel = new Panel(this, {\n        width: 500,\n        // 一个 Panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入代码',\n          // 模板\n          tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>\",\n          // 事件绑定\n          events: [// 插入代码\n          {\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textId);\n              var text = $text.val() || $text.html();\n              text = replaceHtmlSymbol(text);\n\n              if (type === 'new') {\n                // 新插入\n                _this._insertCode(text);\n              } else {\n                // 编辑更新\n                _this._updateCode(text);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // new Panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      $selectionELem.html(value);\n      editor.selection.restoreSelection();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $parentElem = $selectionELem.parent();\n\n      if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - emoticon\n  */\n  // 构造函数\n\n  function Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Emoticon.prototype = {\n    constructor: Emoticon,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config; // 获取表情配置\n\n      var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n      var tabConfig = [];\n      emotions.forEach(function (emotData) {\n        var emotType = emotData.type;\n        var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n        var faceHtml = ''; // emoji 表情\n\n        if (emotType === 'emoji') {\n          content.forEach(function (item) {\n            if (item) {\n              faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n          });\n        } // 图片表情\n\n\n        if (emotType === 'image') {\n          content.forEach(function (item) {\n            var src = item.src;\n            var alt = item.alt;\n\n            if (src) {\n              // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n              faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n            }\n          });\n        }\n\n        tabConfig.push({\n          title: emotData.title,\n          tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n          events: [{\n            selector: 'span.w-e-item',\n            type: 'click',\n            fn: function fn(e) {\n              var target = e.target;\n              var $target = $(target);\n              var nodeName = $target.getNodeName();\n              var insertHtml = void 0;\n\n              if (nodeName === 'IMG') {\n                // 插入图片\n                insertHtml = $target.parent().html();\n              } else {\n                // 插入 emoji\n                insertHtml = '<span>' + $target.html() + '</span>';\n              }\n\n              _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        });\n      });\n      var panel = new Panel(this, {\n        width: 300,\n        height: 200,\n        // 一个 Panel 包含多个 tab\n        tabs: tabConfig\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', emotHtml);\n    }\n  };\n  /*\n      menu - table\n  */\n  // 构造函数\n\n  function Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Table.prototype = {\n    constructor: Table,\n    onClick: function onClick() {\n      if (this._active) {\n        // 编辑现有表格\n        this._createEditPanel();\n      } else {\n        // 插入新表格\n        this._createInsertPanel();\n      }\n    },\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n      var _this = this; // 用到的 id\n\n\n      var btnInsertId = getRandom('btn');\n      var textRowNum = getRandom('row');\n      var textColNum = getRandom('col');\n      var panel = new Panel(this, {\n        width: 250,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入表格',\n          // 模板\n          tpl: \"<div>\\n                        <p style=\\\"text-align:left; padding:5px 0;\\\">\\n                            \\u521B\\u5EFA\\n                            <input id=\\\"\" + textRowNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u884C\\n                            <input id=\\\"\" + textColNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnInsertId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 点击按钮，插入表格\n            selector: '#' + btnInsertId,\n            type: 'click',\n            fn: function fn() {\n              var rowNum = parseInt($('#' + textRowNum).val());\n              var colNum = parseInt($('#' + textColNum).val());\n\n              if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                // form 数据有效\n                _this._insert(rowNum, colNum);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 展示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n      // 拼接 table 模板\n      var r = void 0,\n          c = void 0;\n      var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n      for (r = 0; r < rowNum; r++) {\n        html += '<tr>';\n\n        if (r === 0) {\n          for (c = 0; c < colNum; c++) {\n            html += '<th>&nbsp;</th>';\n          }\n        } else {\n          for (c = 0; c < colNum; c++) {\n            html += '<td>&nbsp;</td>';\n          }\n        }\n\n        html += '</tr>';\n      }\n\n      html += '</table><p><br></p>'; // 执行命令\n\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n      editor.cmd.do('enableObjectResizing', false);\n      editor.cmd.do('enableInlineTableEditing', false);\n    },\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n      var _this2 = this; // 可用的 id\n\n\n      var addRowBtnId = getRandom('add-row');\n      var addColBtnId = getRandom('add-col');\n      var delRowBtnId = getRandom('del-row');\n      var delColBtnId = getRandom('del-col');\n      var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n      var panel = new Panel(this, {\n        width: 320,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '编辑表格',\n          // 模板\n          tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\\\"\" + delRowBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\\\"\" + addColBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\\\"\" + delColBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + delTableBtnId + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 增加行\n            selector: '#' + addRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 增加列\n            selector: '#' + addColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除行\n            selector: '#' + delRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除列\n            selector: '#' + delColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除表格\n            selector: '#' + delTableBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]\n      }); // 显示 panel\n\n      panel.show();\n    },\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n      var result = {};\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName !== 'TD' && nodeName !== 'TH') {\n        return;\n      } // 获取 td index\n\n\n      var $tr = $selectionELem.parent();\n      var $tds = $tr.children();\n      var tdLength = $tds.length;\n      $tds.forEach(function (td, index) {\n        if (td === $selectionELem[0]) {\n          // 记录并跳出循环\n          result.td = {\n            index: index,\n            elem: td,\n            length: tdLength\n          };\n          return false;\n        }\n      }); // 获取 tr index\n\n      var $tbody = $tr.parent();\n      var $trs = $tbody.children();\n      var trLength = $trs.length;\n      $trs.forEach(function (tr, index) {\n        if (tr === $tr[0]) {\n          // 记录并跳出循环\n          result.tr = {\n            index: index,\n            elem: tr,\n            length: trLength\n          };\n          return false;\n        }\n      }); // 返回结果\n\n      return result;\n    },\n    // 增加行\n    _addRow: function _addRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      var tdData = locationData.td;\n      var tdLength = tdData.length; // 拼接即将插入的字符串\n\n      var newTr = document.createElement('tr');\n      var tpl = '',\n          i = void 0;\n\n      for (i = 0; i < tdLength; i++) {\n        tpl += '<td>&nbsp;</td>';\n      }\n\n      newTr.innerHTML = tpl; // 插入\n\n      $(newTr).insertAfter($currentTr);\n    },\n    // 增加列\n    _addCol: function _addCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex);\n        var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n        var newTd = document.createElement(name);\n        $(newTd).insertAfter($currentTd);\n      });\n    },\n    // 删除行\n    _delRow: function _delRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      $currentTr.remove();\n    },\n    // 删除列\n    _delCol: function _delCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex); // 删除\n\n        $currentTd.remove();\n      });\n    },\n    // 删除表格\n    _delTable: function _delTable() {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $table = $selectionELem.parentUntil('table');\n\n      if (!$table) {\n        return;\n      }\n\n      $table.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName === 'TD' || nodeName === 'TH') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - video\n  */\n  // 构造函数\n\n  function Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Video.prototype = {\n    constructor: Video,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this; // 创建 id\n\n\n      var textValId = getRandom('text-val');\n      var btnId = getRandom('btn'); // 创建 panel\n\n      var panel = new Panel(this, {\n        width: 350,\n        // 一个 panel 多个 tab\n        tabs: [{\n          // 标题\n          title: '插入视频',\n          // 模板\n          tpl: '<div>\\n                        <input id=\"' + textValId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\\\"/>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textValId);\n              var val = $text.val().trim(); // 测试用视频地址\n              // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n              if (val) {\n                // 插入视频\n                _this._insert(val);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入视频\n    _insert: function _insert(val) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n  };\n  /*\n      menu - img\n  */\n  // 构造函数\n\n  function Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Image.prototype = {\n    constructor: Image,\n    onClick: function onClick() {\n      var editor = this.editor;\n      var config = editor.config;\n\n      if (config.qiniu) {\n        return;\n      }\n\n      if (this._active) {\n        this._createEditPanel();\n      } else {\n        this._createInsertPanel();\n      }\n    },\n    _createEditPanel: function _createEditPanel() {\n      var editor = this.editor; // id\n\n      var width30 = getRandom('width-30');\n      var width50 = getRandom('width-50');\n      var width100 = getRandom('width-100');\n      var delBtn = getRandom('del-btn'); // tab 配置\n\n      var tabsConfig = [{\n        title: '编辑图片',\n        tpl: \"<div>\\n                    <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                        <span style=\\\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\\\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\\\"\" + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>\",\n        events: [{\n          selector: '#' + width30,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '30%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width50,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '50%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width100,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '100%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + delBtn,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.remove();\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }]\n      }]; // 创建 panel 并显示\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfig\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    _createInsertPanel: function _createInsertPanel() {\n      var editor = this.editor;\n      var uploadImg = editor.uploadImg;\n      var config = editor.config; // id\n\n      var upTriggerId = getRandom('up-trigger');\n      var upFileId = getRandom('up-file');\n      var linkUrlId = getRandom('link-url');\n      var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n      var tabsConfig = [{\n        title: '上传图片',\n        tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n        events: [{\n          // 触发选择图片\n          selector: '#' + upTriggerId,\n          type: 'click',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (fileElem) {\n              fileElem.click();\n            } else {\n              // 返回 true 可关闭 panel\n              return true;\n            }\n          }\n        }, {\n          // 选择图片完毕\n          selector: '#' + upFileId,\n          type: 'change',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (!fileElem) {\n              // 返回 true 可关闭 panel\n              return true;\n            } // 获取选中的 file 对象列表\n\n\n            var fileList = fileElem.files;\n\n            if (fileList.length) {\n              uploadImg.uploadImg(fileList);\n            } // 返回 true 可关闭 panel\n\n\n            return true;\n          }\n        }]\n      }, // first tab end\n      {\n        title: '网络图片',\n        tpl: '<div>\\n                    <input id=\"' + linkUrlId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u56FE\\u7247\\u94FE\\u63A5\\\"/></td>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\" + linkBtnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>\",\n        events: [{\n          selector: '#' + linkBtnId,\n          type: 'click',\n          fn: function fn() {\n            var $linkUrl = $('#' + linkUrlId);\n            var url = $linkUrl.val().trim();\n\n            if (url) {\n              uploadImg.insertLinkImg(url);\n            } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n            return true;\n          }\n        }] // second tab end\n\n      }]; // tabs end\n      // 判断 tabs 的显示\n\n      var tabsConfigResult = [];\n\n      if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n        // 显示“上传图片”\n        tabsConfigResult.push(tabsConfig[0]);\n      }\n\n      if (config.showLinkImg) {\n        // 显示“网络图片”\n        tabsConfigResult.push(tabsConfig[1]);\n      } // 创建 panel 并显示\n\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfigResult\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor._selectedImg) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      所有菜单的汇总\n  */\n  // 存储菜单的构造函数\n\n  var MenuConstructors = {};\n  MenuConstructors.bold = Bold;\n  MenuConstructors.head = Head;\n  MenuConstructors.fontSize = FontSize;\n  MenuConstructors.fontName = FontName;\n  MenuConstructors.link = Link;\n  MenuConstructors.italic = Italic;\n  MenuConstructors.redo = Redo;\n  MenuConstructors.strikeThrough = StrikeThrough;\n  MenuConstructors.underline = Underline;\n  MenuConstructors.undo = Undo;\n  MenuConstructors.list = List;\n  MenuConstructors.justify = Justify;\n  MenuConstructors.foreColor = ForeColor;\n  MenuConstructors.backColor = BackColor;\n  MenuConstructors.quote = Quote;\n  MenuConstructors.code = Code;\n  MenuConstructors.emoticon = Emoticon;\n  MenuConstructors.table = Table;\n  MenuConstructors.video = Video;\n  MenuConstructors.image = Image;\n  /*\n      菜单集合\n  */\n  // 构造函数\n\n  function Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n  } // 修改原型\n\n\n  Menus.prototype = {\n    constructor: Menus,\n    // 初始化菜单\n    init: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config || {};\n      var configMenus = config.menus || []; // 获取配置中的菜单\n      // 根据配置信息，创建菜单\n\n      configMenus.forEach(function (menuKey) {\n        var MenuConstructor = MenuConstructors[menuKey];\n\n        if (MenuConstructor && typeof MenuConstructor === 'function') {\n          // 创建单个菜单\n          _this.menus[menuKey] = new MenuConstructor(editor);\n        }\n      }); // 添加到菜单栏\n\n      this._addToToolbar(); // 绑定事件\n\n\n      this._bindEvent();\n    },\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n      var editor = this.editor;\n      var $toolbarElem = editor.$toolbarElem;\n      var menus = this.menus;\n      var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n      var zIndex = config.zIndex + 1;\n      objForEach(menus, function (key, menu) {\n        var $elem = menu.$elem;\n\n        if ($elem) {\n          // 设置 z-index\n          $elem.css('z-index', zIndex);\n          $toolbarElem.append($elem);\n        }\n      });\n    },\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n      var menus = this.menus;\n      var editor = this.editor;\n      objForEach(menus, function (key, menu) {\n        var type = menu.type;\n\n        if (!type) {\n          return;\n        }\n\n        var $elem = menu.$elem;\n        var droplist = menu.droplist;\n        var panel = menu.panel; // 点击类型，例如 bold\n\n        if (type === 'click' && menu.onClick) {\n          $elem.on('click', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            }\n\n            menu.onClick(e);\n          });\n        } // 下拉框，例如 head\n\n\n        if (type === 'droplist' && droplist) {\n          $elem.on('mouseenter', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 显示\n\n\n            droplist.showTimeoutId = setTimeout(function () {\n              droplist.show();\n            }, 200);\n          }).on('mouseleave', function (e) {\n            // 隐藏\n            droplist.hideTimeoutId = setTimeout(function () {\n              droplist.hide();\n            }, 0);\n          });\n        } // 弹框类型，例如 link\n\n\n        if (type === 'panel' && menu.onClick) {\n          $elem.on('click', function (e) {\n            e.stopPropagation();\n\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 在自定义事件中显示 panel\n\n\n            menu.onClick(e);\n          });\n        }\n      });\n    },\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n      var menus = this.menus;\n      objForEach(menus, function (key, menu) {\n        if (menu.tryChangeActive) {\n          setTimeout(function () {\n            menu.tryChangeActive();\n          }, 100);\n        }\n      });\n    }\n  };\n  /*\n      粘贴信息的处理\n  */\n  // 获取粘贴的纯文本\n\n  function getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n  } // 获取粘贴的html\n\n\n  function getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n      pasteHtml = clipboardData.getData('text/html');\n    }\n\n    if (!pasteHtml && pasteText) {\n      pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n\n    if (!pasteHtml) {\n      return;\n    } // 过滤word中状态过来的无用字符\n\n\n    var docSplitHtml = pasteHtml.split('</html>');\n\n    if (docSplitHtml.length === 2) {\n      pasteHtml = docSplitHtml[0];\n    } // 过滤无用标签\n\n\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n      // 忽略图片\n      pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n      // 过滤样式\n      pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n      // 保留样式\n      pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n  } // 获取粘贴的图片文件\n\n\n  function getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n\n    if (txt) {\n      // 有文字，就忽略图片\n      return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n\n    if (!items) {\n      return result;\n    }\n\n    objForEach(items, function (key, value) {\n      var type = value.type;\n\n      if (/image/i.test(type)) {\n        result.push(value.getAsFile());\n      }\n    });\n    return result;\n  }\n  /*\n      编辑区域\n  */\n  // 获取一个 elem.childNodes 的 JSON 数据\n\n\n  function getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n    $children.forEach(function (curElem) {\n      var elemResult = void 0;\n      var nodeType = curElem.nodeType; // 文本节点\n\n      if (nodeType === 3) {\n        elemResult = curElem.textContent;\n        elemResult = replaceHtmlSymbol(elemResult);\n      } // 普通 DOM 节点\n\n\n      if (nodeType === 1) {\n        elemResult = {}; // tag\n\n        elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n        var attrData = [];\n        var attrList = curElem.attributes || {};\n        var attrListLength = attrList.length || 0;\n\n        for (var i = 0; i < attrListLength; i++) {\n          var attr = attrList[i];\n          attrData.push({\n            name: attr.name,\n            value: attr.value\n          });\n        }\n\n        elemResult.attrs = attrData; // children（递归）\n\n        elemResult.children = getChildrenJSON($(curElem));\n      }\n\n      result.push(elemResult);\n    });\n    return result;\n  } // 构造函数\n\n\n  function Text(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Text.prototype = {\n    constructor: Text,\n    // 初始化\n    init: function init() {\n      // 绑定事件\n      this._bindEvent();\n    },\n    // 清空内容\n    clear: function clear() {\n      this.html('<p><br></p>');\n    },\n    // 获取 设置 html\n    html: function html(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var html = void 0;\n\n      if (val == null) {\n        html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        html = html.replace(/\\u200b/gm, '');\n        return html;\n      } else {\n        $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 获取 JSON\n    getJSON: function getJSON() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      return getChildrenJSON($textElem);\n    },\n    // 获取 设置 text\n    text: function text(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var text = void 0;\n\n      if (val == null) {\n        text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        text = text.replace(/\\u200b/gm, '');\n        return text;\n      } else {\n        $textElem.text('<p>' + val + '</p>'); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 追加内容\n    append: function append(html) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n      editor.initSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // 实时保存选取\n      this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n      this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n      this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n      this._pasteHandle(); // tab 特殊处理\n\n\n      this._tabHandle(); // img 点击\n\n\n      this._imgHandle(); // 拖拽事件\n\n\n      this._dragHandle();\n    },\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 保存当前的选区\n\n      function saveRange(e) {\n        // 随时保存选区\n        editor.selection.saveRange(); // 更新按钮 ative 状态\n\n        editor.menus.changeActive();\n      } // 按键后保存\n\n\n      $textElem.on('keyup', saveRange);\n      $textElem.on('mousedown', function (e) {\n        // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n        $textElem.on('mouseleave', saveRange);\n      });\n      $textElem.on('mouseup', function (e) {\n        saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n        $textElem.off('mouseleave', saveRange);\n      });\n    },\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      function insertEmptyP($selectionElem) {\n        var $p = $('<p><br></p>');\n        $p.insertBefore($selectionElem);\n        editor.selection.createRangeByElem($p, true);\n        editor.selection.restoreSelection();\n        $selectionElem.remove();\n      } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n      function pHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionElem.parent();\n\n        if ($parentElem.html() === '<code><br></code>') {\n          // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n          // 而且继续回车跳不出去，因此只能特殊处理\n          insertEmptyP($selectionElem);\n          return;\n        }\n\n        if (!$parentElem.equal($textElem)) {\n          // 不是顶级标签\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName();\n\n        if (nodeName === 'P') {\n          // 当前的标签是 P ，不用做处理\n          return;\n        }\n\n        if ($selectionElem.text()) {\n          // 有内容，不做处理\n          return;\n        } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n        insertEmptyP($selectionElem);\n      }\n\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          return;\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        pHandle(e);\n      }); // <pre><code></code></pre> 回车时 特殊处理\n\n      function codeHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n          // 不符合要求 忽略\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n        if (editor._willBreakCode === true) {\n          // 此时可以跳出代码块\n          // 插入 <p> ，并将选取定位到 <p>\n          var $p = $('<p><br></p>');\n          $p.insertAfter($parentElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection(); // 修改状态\n\n          editor._willBreakCode = false;\n          e.preventDefault();\n          return;\n        }\n\n        var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n        editor.cmd.do('insertHTML', '\\n');\n        editor.selection.saveRange();\n\n        if (editor.selection.getRange().startOffset === _startOffset) {\n          // 没起作用，再来一遍\n          editor.cmd.do('insertHTML', '\\n');\n        }\n\n        var codeLength = $selectionElem.html().length;\n\n        if (editor.selection.getRange().startOffset + 1 === codeLength) {\n          // 说明光标在代码最后的位置，执行了回车操作\n          // 记录下来，以便下次回车时候跳出 code\n          editor._willBreakCode = true;\n        } // 阻止默认行为\n\n\n        e.preventDefault();\n      }\n\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          // 取消即将跳转代码块的记录\n          editor._willBreakCode = false;\n          return;\n        } // <pre><code></code></pre> 回车时 特殊处理\n\n\n        codeHandle(e);\n      });\n    },\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var txtHtml = $textElem.html().toLowerCase().trim();\n\n        if (txtHtml === '<p><br></p>') {\n          // 最后剩下一个空行，就不再删除了\n          e.preventDefault();\n          return;\n        }\n      });\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var $p = void 0;\n        var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n        if (!txtHtml || txtHtml === '<br>') {\n          // 内容空了\n          $p = $('<p><br/></p>');\n          $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n          $textElem.append($p);\n          editor.selection.createRangeByElem($p, false, true);\n          editor.selection.restoreSelection();\n        }\n      });\n    },\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n      var editor = this.editor;\n      var config = editor.config;\n      var pasteFilterStyle = config.pasteFilterStyle;\n      var pasteTextHandle = config.pasteTextHandle;\n      var ignoreImg = config.pasteIgnoreImg;\n      var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n      // 判断该次粘贴事件是否可以执行\n\n      var pasteTime = 0;\n\n      function canDo() {\n        var now = Date.now();\n        var flag = false;\n\n        if (now - pasteTime >= 100) {\n          // 间隔大于 100 ms ，可以执行\n          flag = true;\n        }\n\n        pasteTime = now;\n        return flag;\n      }\n\n      function resetTime() {\n        pasteTime = 0;\n      } // 粘贴文字\n\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          // 阻止默认行为，使用 execCommand 的粘贴命令\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的文字\n\n\n        var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n        var pasteText = getPasteText(e);\n        pasteText = pasteText.replace(/\\n/gm, '<br>');\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n          return;\n        } // 先放开注释，有问题再追查 ————\n        // // 表格中忽略，可能会出现异常问题\n        // if (nodeName === 'TD' || nodeName === 'TH') {\n        //     return\n        // }\n\n\n        if (!pasteHtml) {\n          // 没有内容，可继续执行下面的图片粘贴\n          resetTime();\n          return;\n        }\n\n        try {\n          // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n          // 因此执行 insertHTML 会报错\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n          }\n\n          editor.cmd.do('insertHTML', pasteHtml);\n        } catch (ex) {\n          // 此时使用 pasteText 来兼容一下\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n        }\n      }); // 粘贴图片\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的图片\n\n\n        var pasteFiles = getPasteImgs(e);\n\n        if (!pasteFiles || !pasteFiles.length) {\n          return;\n        } // 获取当前的元素\n\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(pasteFiles);\n      });\n    },\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 9) {\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        }\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n          // <pre><code> 里面\n          editor.cmd.do('insertHTML', '    ');\n        } else {\n          // 普通文字\n          editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n        }\n\n        e.preventDefault();\n      });\n    },\n    // img 点击\n    _imgHandle: function _imgHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n      $textElem.on('click', 'img', function (e) {\n        var img = this;\n        var $img = $(img);\n\n        if ($img.attr('data-w-e') === '1') {\n          // 是表情图片，忽略\n          return;\n        } // 记录当前点击过的图片\n\n\n        editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n        editor.selection.createRangeByElem($img);\n        editor.selection.restoreSelection();\n      }); // 去掉图片的 selected 样式\n\n      $textElem.on('click  keyup', function (e) {\n        if (e.target.matches('img')) {\n          // 点击的是图片，忽略\n          return;\n        } // 删除记录\n\n\n        editor._selectedImg = null;\n      });\n    },\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n      var editor = this.editor; // 禁用 document 拖拽事件\n\n      var $document = $(document);\n      $document.on('dragleave drop dragenter dragover', function (e) {\n        e.preventDefault();\n      }); // 添加编辑区域拖拽事件\n\n      var $textElem = editor.$textElem;\n      $textElem.on('drop', function (e) {\n        e.preventDefault();\n        var files = e.dataTransfer && e.dataTransfer.files;\n\n        if (!files || !files.length) {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(files);\n      });\n    }\n  };\n  /*\n      命令，封装 document.execCommand\n  */\n  // 构造函数\n\n  function Command(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Command.prototype = {\n    constructor: Command,\n    // 执行命令\n    do: function _do(name, value) {\n      var editor = this.editor; // 使用 styleWithCSS\n\n      if (!editor._useStyleWithCSS) {\n        document.execCommand('styleWithCSS', null, true);\n        editor._useStyleWithCSS = true;\n      } // 如果无选区，忽略\n\n\n      if (!editor.selection.getRange()) {\n        return;\n      } // 恢复选取\n\n\n      editor.selection.restoreSelection(); // 执行\n\n      var _name = '_' + name;\n\n      if (this[_name]) {\n        // 有自定义事件\n        this[_name](value);\n      } else {\n        // 默认 command\n        this._execCommand(name, value);\n      } // 修改菜单状态\n\n\n      editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n      editor.selection.saveRange();\n      editor.selection.restoreSelection(); // 触发 onchange\n\n      editor.change && editor.change();\n    },\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html);\n      } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        range.insertNode($(html)[0]);\n      } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html);\n      }\n    },\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode($elem[0]);\n      }\n    },\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n      document.execCommand(name, false, value);\n    },\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n      return document.queryCommandValue(name);\n    },\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n      return document.queryCommandState(name);\n    },\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n      return document.queryCommandSupported(name);\n    }\n  };\n  /*\n      selection range API\n  */\n  // 构造函数\n\n  function API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n  } // 修改原型\n\n\n  API.prototype = {\n    constructor: API,\n    // 获取 range 对象\n    getRange: function getRange() {\n      return this._currentRange;\n    },\n    // 保存选区\n    saveRange: function saveRange(_range) {\n      if (_range) {\n        // 保存已有选区\n        this._currentRange = _range;\n        return;\n      } // 获取当前的选区\n\n\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return;\n      }\n\n      var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n      var $containerElem = this.getSelectionContainerElem(range);\n\n      if (!$containerElem) {\n        return;\n      } // 判断选区内容是否在不可编辑区域之内\n\n\n      if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      if ($textElem.isContain($containerElem)) {\n        // 是编辑内容之内的\n        this._currentRange = range;\n      }\n    },\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n      if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n      }\n\n      var range = this._currentRange;\n\n      if (range) {\n        range.collapse(toStart);\n      }\n    },\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n      var range = this._currentRange;\n\n      if (range) {\n        return this._currentRange.toString();\n      } else {\n        return '';\n      }\n    },\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n      var range = this._currentRange;\n\n      if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n          if (range.startOffset === range.endOffset) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(this._currentRange);\n    },\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n      var editor = this.editor;\n      var range = this.getRange();\n      var $elem = void 0;\n\n      if (!range) {\n        // 当前无 range\n        return;\n      }\n\n      if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return;\n      }\n\n      try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n          // 插入 &#8203\n          editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n          range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n          this.saveRange(range);\n        } else {\n          $elem = $('<strong>&#8203;</strong>');\n          editor.cmd.do('insertElem', $elem);\n          this.createRangeByElem($elem, true);\n        }\n      } catch (ex) {// 部分情况下会报错，兼容一下\n      }\n    },\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n      // $elem - 经过封装的 elem\n      // toStart - true 开始位置，false 结束位置\n      // isContent - 是否选中Elem的内容\n      if (!$elem.length) {\n        return;\n      }\n\n      var elem = $elem[0];\n      var range = document.createRange();\n\n      if (isContent) {\n        range.selectNodeContents(elem);\n      } else {\n        range.selectNode(elem);\n      }\n\n      if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n      } // 存储 range\n\n\n      this.saveRange(range);\n    }\n  };\n  /*\n      上传进度条\n  */\n\n  function Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n  }\n\n  Progress.prototype = {\n    constructor: Progress,\n    show: function show(progress) {\n      var _this = this; // 状态处理\n\n\n      if (this._isShow) {\n        return;\n      }\n\n      this._isShow = true; // 渲染\n\n      var $bar = this.$bar;\n\n      if (!this._isRender) {\n        var $textContainer = this.$textContainer;\n        $textContainer.append($bar);\n      } else {\n        this._isRender = true;\n      } // 改变进度（节流，100ms 渲染一次）\n\n\n      if (Date.now() - this._time > 100) {\n        if (progress <= 1) {\n          $bar.css('width', progress * 100 + '%');\n          this._time = Date.now();\n        }\n      } // 隐藏\n\n\n      var timeoutId = this._timeoutId;\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        _this._hide();\n      }, 500);\n    },\n    _hide: function _hide() {\n      var $bar = this.$bar;\n      $bar.remove(); // 修改状态\n\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /*\n      上传图片\n  */\n  // 构造函数\n\n\n  function UploadImg(editor) {\n    this.editor = editor;\n  } // 原型\n\n\n  UploadImg.prototype = {\n    constructor: UploadImg,\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n      var editor = this.editor;\n      var debug = editor.config.debug;\n      var customAlert = editor.config.customAlert;\n\n      if (debug) {\n        throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n      } else {\n        if (customAlert && typeof customAlert === 'function') {\n          customAlert(alertInfo);\n        } else {\n          alert(alertInfo);\n        }\n      }\n    },\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n      var _this2 = this;\n\n      if (!link) {\n        return;\n      }\n\n      var editor = this.editor;\n      var config = editor.config; // 校验格式\n\n      var linkImgCheck = config.linkImgCheck;\n      var checkResult = void 0;\n\n      if (linkImgCheck && typeof linkImgCheck === 'function') {\n        checkResult = linkImgCheck(link);\n\n        if (typeof checkResult === 'string') {\n          // 校验失败，提示信息\n          alert(checkResult);\n          return;\n        }\n      }\n\n      editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>'); // 验证图片 url 是否有效，无效的话给出提示\n\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        var callback = config.linkImgCallback;\n\n        if (callback && typeof callback === 'function') {\n          callback(link);\n        }\n\n        img = null;\n      };\n\n      img.onerror = function () {\n        img = null; // 无法成功下载图片\n\n        _this2._alert('插入图片错误', \"wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \\\"\" + link + \"\\\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25\");\n\n        return;\n      };\n\n      img.onabort = function () {\n        img = null;\n      };\n\n      img.src = link;\n    },\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n      var _this3 = this;\n\n      if (!files || !files.length) {\n        return;\n      } // ------------------------------ 获取配置信息 ------------------------------\n\n\n      var editor = this.editor;\n      var config = editor.config;\n      var uploadImgServer = config.uploadImgServer;\n      var uploadImgShowBase64 = config.uploadImgShowBase64;\n      var maxSize = config.uploadImgMaxSize;\n      var maxSizeM = maxSize / 1024 / 1024;\n      var maxLength = config.uploadImgMaxLength || 10000;\n      var uploadFileName = config.uploadFileName || '';\n      var uploadImgParams = config.uploadImgParams || {};\n      var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n      var uploadImgHeaders = config.uploadImgHeaders || {};\n      var hooks = config.uploadImgHooks || {};\n      var timeout = config.uploadImgTimeout || 3000;\n      var withCredentials = config.withCredentials;\n\n      if (withCredentials == null) {\n        withCredentials = false;\n      }\n\n      var customUploadImg = config.customUploadImg;\n\n      if (!customUploadImg) {\n        // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n        if (!uploadImgServer && !uploadImgShowBase64) {\n          return;\n        }\n      } // ------------------------------ 验证文件信息 ------------------------------\n\n\n      var resultFiles = [];\n      var errInfo = [];\n      arrForEach(files, function (file) {\n        var name = file.name;\n        var size = file.size; // chrome 低版本 name === undefined\n\n        if (!name || !size) {\n          return;\n        }\n\n        if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n          // 后缀名不合法，不是图片\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u4E0D\\u662F\\u56FE\\u7247\");\n          return;\n        }\n\n        if (maxSize < size) {\n          // 上传图片过大\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u5927\\u4E8E \" + maxSizeM + 'M');\n          return;\n        } // 验证通过的加入结果列表\n\n\n        resultFiles.push(file);\n      }); // 抛出验证信息\n\n      if (errInfo.length) {\n        this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n        return;\n      }\n\n      if (resultFiles.length > maxLength) {\n        this._alert('一次最多上传' + maxLength + '张图片');\n\n        return;\n      } // ------------------------------ 自定义上传 ------------------------------\n\n\n      if (customUploadImg && typeof customUploadImg === 'function') {\n        customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n        return;\n      } // 添加图片数据\n\n\n      var formdata = new FormData();\n      arrForEach(resultFiles, function (file) {\n        var name = uploadFileName || file.name;\n        formdata.append(name, file);\n      }); // ------------------------------ 上传图片 ------------------------------\n\n      if (uploadImgServer && typeof uploadImgServer === 'string') {\n        // 添加参数\n        var uploadImgServerArr = uploadImgServer.split('#');\n        uploadImgServer = uploadImgServerArr[0];\n        var uploadImgServerHash = uploadImgServerArr[1] || '';\n        objForEach(uploadImgParams, function (key, val) {\n          // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n          // val = encodeURIComponent(val)\n          // 第一，将参数拼接到 url 中\n          if (uploadImgParamsWithUrl) {\n            if (uploadImgServer.indexOf('?') > 0) {\n              uploadImgServer += '&';\n            } else {\n              uploadImgServer += '?';\n            }\n\n            uploadImgServer = uploadImgServer + key + '=' + val;\n          } // 第二，将参数添加到 formdata 中\n\n\n          formdata.append(key, val);\n        });\n\n        if (uploadImgServerHash) {\n          uploadImgServer += '#' + uploadImgServerHash;\n        } // 定义 xhr\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', uploadImgServer); // 设置超时\n\n        xhr.timeout = timeout;\n\n        xhr.ontimeout = function () {\n          // hook - timeout\n          if (hooks.timeout && typeof hooks.timeout === 'function') {\n            hooks.timeout(xhr, editor);\n          }\n\n          _this3._alert('上传图片超时');\n        }; // 监控 progress\n\n\n        if (xhr.upload) {\n          xhr.upload.onprogress = function (e) {\n            var percent = void 0; // 进度条\n\n            var progressBar = new Progress(editor);\n\n            if (e.lengthComputable) {\n              percent = e.loaded / e.total;\n              progressBar.show(percent);\n            }\n          };\n        } // 返回数据\n\n\n        xhr.onreadystatechange = function () {\n          var result = void 0;\n\n          if (xhr.readyState === 4) {\n            if (xhr.status < 200 || xhr.status >= 300) {\n              // hook - error\n              if (hooks.error && typeof hooks.error === 'function') {\n                hooks.error(xhr, editor);\n              } // xhr 返回状态错误\n\n\n              _this3._alert('上传图片发生错误', \"\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F \" + xhr.status);\n\n              return;\n            }\n\n            result = xhr.responseText;\n\n            if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n              try {\n                result = JSON.parse(result);\n              } catch (ex) {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                }\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                return;\n              }\n            }\n\n            if (!hooks.customInsert && result.errno != '0') {\n              // hook - fail\n              if (hooks.fail && typeof hooks.fail === 'function') {\n                hooks.fail(xhr, editor, result);\n              } // 数据错误\n\n\n              _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n            } else {\n              if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                // 使用者自定义插入方法\n                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n              } else {\n                // 将图片插入编辑器\n                var data = result.data || [];\n                data.forEach(function (link) {\n                  _this3.insertLinkImg(link);\n                });\n              } // hook - success\n\n\n              if (hooks.success && typeof hooks.success === 'function') {\n                hooks.success(xhr, editor, result);\n              }\n            }\n          }\n        }; // hook - before\n\n\n        if (hooks.before && typeof hooks.before === 'function') {\n          var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n          if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n            if (beforeResult.prevent) {\n              // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n              this._alert(beforeResult.msg);\n\n              return;\n            }\n          }\n        } // 自定义 headers\n\n\n        objForEach(uploadImgHeaders, function (key, val) {\n          xhr.setRequestHeader(key, val);\n        }); // 跨域传 cookie\n\n        xhr.withCredentials = withCredentials; // 发送请求\n\n        xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n        return;\n      } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n      if (uploadImgShowBase64) {\n        arrForEach(files, function (file) {\n          var _this = _this3;\n          var reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = function () {\n            _this.insertLinkImg(this.result);\n          };\n        });\n      }\n    }\n  };\n  /*\n      编辑器构造函数\n  */\n  // id，累加\n\n  var editorId = 1; // 构造函数\n\n  function Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n      // 没有传入任何参数，报错\n      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    } // id，用以区分单个页面不同的编辑器对象\n\n\n    this.id = 'wangEditor-' + editorId++;\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector; // 自定义配置\n\n    this.customConfig = {};\n  } // 修改原型\n\n\n  Editor.prototype = {\n    constructor: Editor,\n    // 初始化配置\n    _initConfig: function _initConfig() {\n      // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n      var target = {};\n      this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n      var langConfig = this.config.lang || {};\n      var langArgs = [];\n      objForEach(langConfig, function (key, val) {\n        // key 即需要生成正则表达式的规则，如“插入链接”\n        // val 即需要被替换成的语言，如“insert link”\n        langArgs.push({\n          reg: new RegExp(key, 'img'),\n          val: val\n        });\n      });\n      this.config.langArgs = langArgs;\n    },\n    // 初始化 DOM\n    _initDom: function _initDom() {\n      var _this = this;\n\n      var toolbarSelector = this.toolbarSelector;\n      var $toolbarSelector = $(toolbarSelector);\n      var textSelector = this.textSelector;\n      var config$$1 = this.config;\n      var zIndex = config$$1.zIndex; // 定义变量\n\n      var $toolbarElem = void 0,\n          $textContainerElem = void 0,\n          $textElem = void 0,\n          $children = void 0;\n\n      if (textSelector == null) {\n        // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n        $toolbarElem = $('<div></div>');\n        $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n        $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n        $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n        $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n      } else {\n        // toolbar 和 text 的选择器都有值，记录属性\n        $toolbarElem = $toolbarSelector;\n        $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $textContainerElem.children();\n      } // 编辑区域\n\n\n      $textElem = $('<div></div>');\n      $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n      if ($children && $children.length) {\n        $textElem.append($children);\n      } else {\n        $textElem.append($('<p><br></p>'));\n      } // 编辑区域加入DOM\n\n\n      $textContainerElem.append($textElem); // 设置通用的 class\n\n      $toolbarElem.addClass('w-e-toolbar');\n      $textContainerElem.addClass('w-e-text-container');\n      $textContainerElem.css('z-index', zIndex);\n      $textElem.addClass('w-e-text'); // 添加 ID\n\n      var toolbarElemId = getRandom('toolbar-elem');\n      $toolbarElem.attr('id', toolbarElemId);\n      var textElemId = getRandom('text-elem');\n      $textElem.attr('id', textElemId); // 记录属性\n\n      this.$toolbarElem = $toolbarElem;\n      this.$textContainerElem = $textContainerElem;\n      this.$textElem = $textElem;\n      this.toolbarElemId = toolbarElemId;\n      this.textElemId = textElemId; // 记录输入法的开始和结束\n\n      var compositionEnd = true;\n      $textContainerElem.on('compositionstart', function () {\n        // 输入法开始输入\n        compositionEnd = false;\n      });\n      $textContainerElem.on('compositionend', function () {\n        // 输入法结束输入\n        compositionEnd = true;\n      }); // 绑定 onchange\n\n      $textContainerElem.on('click keyup', function () {\n        // 输入法结束才出发 onchange\n        compositionEnd && _this.change && _this.change();\n      });\n      $toolbarElem.on('click', function () {\n        this.change && this.change();\n      }); //绑定 onfocus 与 onblur 事件\n\n      if (config$$1.onfocus || config$$1.onblur) {\n        // 当前编辑器是否是焦点状态\n        this.isFocus = false;\n        $(document).on('click', function (e) {\n          //判断当前点击元素是否在编辑器内\n          var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n          var isToolbar = $toolbarElem.isContain($(e.target));\n          var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n          if (!isChild) {\n            //若为选择工具栏中的功能，则不视为成blur操作\n            if (isToolbar && !isMenu) {\n              return;\n            }\n\n            if (_this.isFocus) {\n              _this.onblur && _this.onblur();\n            }\n\n            _this.isFocus = false;\n          } else {\n            if (!_this.isFocus) {\n              _this.onfocus && _this.onfocus();\n            }\n\n            _this.isFocus = true;\n          }\n        });\n      }\n    },\n    // 封装 command\n    _initCommand: function _initCommand() {\n      this.cmd = new Command(this);\n    },\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n      this.selection = new API(this);\n    },\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n      this.uploadImg = new UploadImg(this);\n    },\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n      this.menus = new Menus(this);\n      this.menus.init();\n    },\n    // 添加 text 区域\n    _initText: function _initText() {\n      this.txt = new Text(this);\n      this.txt.init();\n    },\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n      var $textElem = this.$textElem;\n      var $children = $textElem.children();\n\n      if (!$children.length) {\n        // 如果编辑器区域无内容，添加一个空行，重新设置选区\n        $textElem.append($('<p><br></p>'));\n        this.initSelection();\n        return;\n      }\n\n      var $last = $children.last();\n\n      if (newLine) {\n        // 新增一个空行\n        var html = $last.html().toLowerCase();\n        var nodeName = $last.getNodeName();\n\n        if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n          // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n      }\n\n      this.selection.createRangeByElem($last, false, true);\n      this.selection.restoreSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // -------- 绑定 onchange 事件 --------\n      var onChangeTimeoutId = 0;\n      var beforeChangeHtml = this.txt.html();\n      var config$$1 = this.config; // onchange 触发延迟时间\n\n      var onchangeTimeout = config$$1.onchangeTimeout;\n      onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n      if (!onchangeTimeout || onchangeTimeout <= 0) {\n        onchangeTimeout = 200;\n      }\n\n      var onchange = config$$1.onchange;\n\n      if (onchange && typeof onchange === 'function') {\n        // 触发 change 的有三个场景：\n        // 1. $textContainerElem.on('click keyup')\n        // 2. $toolbarElem.on('click')\n        // 3. editor.cmd.do()\n        this.change = function () {\n          // 判断是否有变化\n          var currentHtml = this.txt.html();\n\n          if (currentHtml.length === beforeChangeHtml.length) {\n            // 需要比较每一个字符\n            if (currentHtml === beforeChangeHtml) {\n              return;\n            }\n          } // 执行，使用节流\n\n\n          if (onChangeTimeoutId) {\n            clearTimeout(onChangeTimeoutId);\n          }\n\n          onChangeTimeoutId = setTimeout(function () {\n            // 触发配置的 onchange 函数\n            onchange(currentHtml);\n            beforeChangeHtml = currentHtml;\n          }, onchangeTimeout);\n        };\n      } // -------- 绑定 onblur 事件 --------\n\n\n      var onblur = config$$1.onblur;\n\n      if (onblur && typeof onblur === 'function') {\n        this.onblur = function () {\n          var currentHtml = this.txt.html();\n          onblur(currentHtml);\n        };\n      } // -------- 绑定 onfocus 事件 --------\n\n\n      var onfocus = config$$1.onfocus;\n\n      if (onfocus && typeof onfocus === 'function') {\n        this.onfocus = function () {\n          onfocus();\n        };\n      }\n    },\n    // 创建编辑器\n    create: function create() {\n      // 初始化配置信息\n      this._initConfig(); // 初始化 DOM\n\n\n      this._initDom(); // 封装 command API\n\n\n      this._initCommand(); // 封装 selection range API\n\n\n      this._initSelectionAPI(); // 添加 text\n\n\n      this._initText(); // 初始化菜单\n\n\n      this._initMenus(); // 添加 图片上传\n\n\n      this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n      this.initSelection(true); // 绑定事件\n\n      this._bindEvent();\n    },\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n      $.offAll();\n    }\n  }; // 检验是否浏览器环境\n\n  try {\n    document;\n  } catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n  } // polyfill\n\n\n  polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n  var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = inlinecss;\n  document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n  var index = window.wangEditor || Editor;\n  return index;\n});"],"sourceRoot":""}